#!/bin/bash
#
# This is a git extension that merges a pull request or topic branch via
# rebasing so as to avoid a merge commit.
#
# Copyright 2015 Bazaarvoice, Inc. Licensed under Apache 2.0
# http://www.apache.org/licenses/LICENSE-2.0

project_root=`echo $(git rev-parse --show-toplevel)`
lockfile=$project_root/.git-land-in-progress
merge_branch="$1"

# This lockfile exists primarily so that other automation, such as file change
# monitoring, can react to the fact that this process is running.
touch $lockfile

function exit_and_cleanup() {
  rm -f $lockfile
  exit $1
}

if [ -z "$merge_branch" ]; then
  echo ""
  echo "Usage: git land <pull request number>"
  echo "       git land <branch>"
  echo ""
  exit_and_cleanup 1
fi

# set upstream remote, defaulting to origin
remote=$(git config git-land.remote)
if [ -z "$remote" ]; then
  remote='origin'
fi

# set merge branch if merging a PR
if [[ $1 =~ ^[0-9]+$ ]]; then
  pr=$merge_branch
  merge_branch="$remote/pr/$pr"
fi

read -r -p "Are you sure you want to merge $merge_branch into $remote/master? [Y/n] " response
if [[ ! ($response = '' || $response =~ ^([yY][eE][sS]|[yY])$) ]]; then
  exit_and_cleanup 1
fi

# sync local master with latest on github
if ! (git checkout master && git fetch $remote && git reset --hard $remote/master); then
  echo 'Could not sync local master with main repo'
  exit_and_cleanup $?
fi

# rebase and squash
if ! (git checkout $merge_branch && git rebase -i master); then
  echo "Could not checkout or rebase $merge_branch on master"
  exit_and_cleanup $?
fi

# append github tag to close PR if we can and the last commit message omits it
if [ -n "$pr" ]; then
  commit_message=$(git log -1 --pretty=%B)

  if [[ ! $commit_message =~ \[closes?\ \#"$pr"\] ]]; then
    if ! (git commit -n --amend -m "$commit_message"$'\n\n'"[close #$pr]"); then
      echo "Could not append commit message tag to close #$pr"
    fi
  fi
fi

# merge the PR and push
head=$(git rev-parse HEAD)
if ! (git checkout master && git merge --ff-only $head); then
  echo "Could not fast-forward merge $merge_branch into master"
  exit_and_cleanup $?
fi

git push $remote master
exit_and_cleanup $?
